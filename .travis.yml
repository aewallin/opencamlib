os:
  - windows
  - linux
  - osx

# matrix:
#   allow_failures:
#     - os: windows
#       env: BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=ON BUILD_PY_LIB=OFF

language: cpp

compiler:
    - gcc

env:
  - BUILD_CXX_LIB=ON BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=ON BUILD_PY_LIB=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=ON USE_PY_3=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=ON USE_PY_3=ON

before_install:
  - >
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update
      brew upgrade cmake
      brew install llvm
      if [[ "$USE_PY_3" == "OFF" ]]; then
        brew install boost-python
      elif [[ "$USE_PY_3" == "ON" ]]; then
        brew install boost-python3
      fi
      export CMAKE_FIND_FRAMEWORK=LAST
      export CMAKE_VERBOSE_MAKEFILE=ON
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update
      sudo apt-get install -y git libboost-python-dev libboost-system-dev
      wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.sh
      sudo mkdir /opt/cmake
      sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/opt/cmake
      sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
    else
      choco install cmake
      choco install nodejs
      if [[ "$USE_PY_3" == "OFF" ]]; then
        choco install python2
      elif [[ "$USE_PY_3" == "ON" ]]; then
        choco install python3
      fi
      wget -nv -O boost.zip https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.zip
      7z x boost.zip -y -o/c/boost -r
      if [[ "$BUILD_PY_LIB" == "ON" ]]; then
        cd /c/boost/boost_1_69_0
        ./bootstrap.bat
        if [[ "$USE_PY_3" == "OFF" ]]; then
          echo 'using python : 2.7 : C:\\Python27\\python : C:\\Python27\\include : C:\\Python27\\libs ;' >> project-config.jam
        else
          echo 'using python : 3.7 : C:\\Python37\\python : C:\\Python37\\include : C:\\Python37\\libs ;' >> project-config.jam
        fi
        cat project-config.jam
        cat bootstrap.log
        ./b2 address-model=64 threading=multi --with-python -j2 variant=debug link=static --layout=system
        ls /c/boost/boost_1_69_0/stage/lib
      fi
    fi

before_script:
  - cd $TRAVIS_BUILD_DIR
  - export PATH="$PATH:/c/Program Files/nodejs:/c/Python27/python:/c/Python37/python"
  - echo $PATH
  - npm install
  - mkdir build
  - cd build
  - echo $BUILD_CXX_LIB
  - echo $BUILD_NODEJS_LIB
  - echo $BUILD_PY_LIB
  - echo $USE_PY_3
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="/usr/local/opt/llvm/bin/clang++"; fi
  - >
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      if [[ "$BUILD_NODEJS_LIB" == "ON" ]]; then
        cd ..
        ./node_modules/.bin/cmake-js compile --arch=x64 \
          --CDBOOST_ROOT="/c/boost/boost_1_69_0" \
          --CDBOOST_INCLUDEDIR="/c/boost/boost_1_69_0/boost" \
          --CDBOOST_LIBRARYDIR="/c/boost/boost_1_69_0/stage/lib" \
          --CDBUILD_CXX_LIB="$BUILD_CXX_LIB" \
          --CDBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
          --CDBUILD_PY_LIB="$BUILD_PY_LIB" \
          --CDVERSION_STRING="$TRAVIS_BRANCH"
      elif [[ "$BUILD_PY_LIB" == "ON" ]]; then
        if [[ "$USE_PY_3" == "ON" ]]; then
          cmake \
            -DPython3_ROOT_DIR="/c/Python37" \
            -DPython3_EXECUTABLE="/c/Python37/python.exe" \
            -DPython3_SITELIB="/c/Python37/Lib/site-packages" \
            -DPython3_SITEARCH="/c/Python37/Lib/site-packages" \
            -DBOOST_ROOT="/c/boost/boost_1_69_0" \
            -DBOOST_INCLUDEDIR="/c/boost/boost_1_69_0/boost" \
            -DBOOST_LIBRARYDIR="/c/boost/boost_1_69_0/stage/lib" \
            -DBUILD_CXX_LIB="$BUILD_CXX_LIB" \
            -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
            -DBUILD_PY_LIB="$BUILD_PY_LIB" \
            -DUSE_PY_3="$USE_PY_3" \
            -DVERSION_STRING="$TRAVIS_BRANCH" \
            -DCMAKE_GENERATOR_PLATFORM="x64" \
            ../src;
        else
          cmake \
            -DPython2_ROOT_DIR="/c/Python27" \
            -DPython2_EXECUTABLE="/c/Python27/python.exe" \
            -DPython2_SITELIB="/c/Python27/Lib/site-packages" \
            -DPython2_SITEARCH="/c/Python27/Lib/site-packages" \
            -DBOOST_ROOT="/c/boost/boost_1_69_0" \
            -DBOOST_INCLUDEDIR="/c/boost/boost_1_69_0/boost" \
            -DBOOST_LIBRARYDIR="/c/boost/boost_1_69_0/stage/lib" \
            -DBUILD_CXX_LIB="$BUILD_CXX_LIB" \
            -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
            -DBUILD_PY_LIB="$BUILD_PY_LIB" \
            -DUSE_PY_3="$USE_PY_3" \
            -DVERSION_STRING="$TRAVIS_BRANCH" \
            -DCMAKE_GENERATOR_PLATFORM="x64" \
            ../src;
        fi
      else
        cmake \
          -DBOOST_ROOT="/c/boost/boost_1_69_0" \
          -DBOOST_INCLUDEDIR="/c/boost/boost_1_69_0/boost" \
          -DBOOST_LIBRARYDIR="/c/boost/boost_1_69_0/stage/lib" \
          -DBUILD_CXX_LIB="$BUILD_CXX_LIB" \
          -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
          -DBUILD_PY_LIB="$BUILD_PY_LIB" \
          -DVERSION_STRING="$TRAVIS_BRANCH" \
          -DCMAKE_GENERATOR_PLATFORM="x64" \
          ../src;
      fi
    else
      if [[ "$BUILD_NODEJS_LIB" == "ON" ]]; then
        cd ..
        ./node_modules/.bin/cmake-js compile --arch=x64 \
          --CDBUILD_CXX_LIB="$BUILD_CXX_LIB" \
          --CDBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
          --CDBUILD_PY_LIB="$BUILD_PY_LIB" \
          --CDUSE_PY_3="$USE_PY_3" \
          --CDVERSION_STRING="$TRAVIS_BRANCH"
      else
        /usr/local/bin/cmake \
          -DBUILD_CXX_LIB="$BUILD_CXX_LIB" \
          -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB" \
          -DBUILD_PY_LIB="$BUILD_PY_LIB" \
          -DUSE_PY_3="$USE_PY_3" \
          -DVERSION_STRING="$TRAVIS_BRANCH" \
          ../src;
      fi
    fi

script:
  - if [ "$TRAVIS_OS_NAME" != "windows" ] && [ "$BUILD_NODEJS_LIB" == "OFF" ]; then sudo make install; fi

after_success:
  - >
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$USE_PY_3" == "ON" ]]; then
        otool -L /usr/local/Cellar/python/3.7.2_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/ocl.so;
      else
        otool -L /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ocl.so;
      fi
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$USE_PY_3" == "ON" ]]; then
        objdump -x /usr/lib/python3/dist-packages/ocl.so;
      else
        objdump -x /usr/lib/python2.7/dist-packages/ocl.so;
      fi
    fi
deploy:
  provider: releases
  api_key:
    secure: Nl9hJi7d5X2P/l3SlUgIjQInKSJjaICpb4VchPK9Qi0vPGgo0EQC9wz4yIwJq8dFB/+XA9+4ov8xMVsXMWTLJNEPCcFkSLq12nLCxZHDjTIytEV8rryQW3mMCrf/Pgr4MtWr8Q43UPNGp82m8yfOIQjqhR/uM6K1aIKf1c0uDYIYhTQ1x29g9fG7hFrr3L5OI2I+8zYDg3KBJH9RiDd3t78fWIUufZJsCCS0H9UUSOuyjeeW5sW6SLu0v+1hPPYZKrxCvyAvFZw7aIKBfVhCuGVmo+v7ZUKIR1vlhN4Df9o0AgobaFPKxG1507iwQN7RYHFXduhWfvZAqFhzTZ2JmQkt4wXHSDywDrKnL6akw+38osQIEmXXsy/Z1WbX7RGplh72xGQcwUEriFe3o2I1FalLAN0fS2cIqz94D+joHtDVPv6nLRXS6trJ3mRwLgPO7QfelNfX0lMJTICy6H9mWLbw0wNKl19pp7Ql89zMrU6YepXipYFqsqJqTm/UJy/ickrDlRyvPPNY8S0PftJvGdEFaLnmodrUiQXJuynWTjvMU1Wqypd7moW05XXwwPTbKdjbJlLMXQrU4YECLO2/Q58Cl/RXNPeE+SGdktLx8K2FqditMSwTYiIVcbDMSLnh3+6+6sXzhGqRztjgp3+3FKZ0OAtD4cY5DY9JpRtuiPk=
  file:
    - build/Release/opencamlib.darwin.node
    - build/Release/opencamlib.win32.node
    - build/Release/opencamlib.linux.node
    - build/ocl.27.darwin.so
    - build/ocl.27.win32.so
    - build/ocl.27.linux.so
    - build/ocl.37.darwin.so
    - build/ocl.37.win32.so
    - build/ocl.37.linux.so
  on:
    all_branches: true