os:
  - windows
  - linux
  - osx

language: cpp

compiler:
    - gcc

env:
  - BUILD_CXX_LIB=ON BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=ON BUILD_PY_LIB=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=ON USE_PYTHONV3=OFF
  - BUILD_CXX_LIB=OFF BUILD_NODEJS_LIB=OFF BUILD_PY_LIB=ON USE_PYTHONV3=ON

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew upgrade cmake;
      if [[ "$USE_PYTHONV3" == "OFF" ]]; then
        brew install boost-python;
      elif [[ "$USE_PYTHONV3" == "ON" ]]; then
        brew install boost-python3;
      fi;
      export CMAKE_FIND_FRAMEWORK=LAST;
      export CMAKE_VERBOSE_MAKEFILE=ON;
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get install -y git libboost-python-dev libboost-system-dev;
      wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.sh;
      sudo mkdir /opt/cmake;
      sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/opt/cmake;
      sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake;
    else
      ls "/c";
      ls "/c/Program Files (x86)";
      ls "/c/Program Files (x86)/MSBuild";
      ls "/c/Program Files (x86)/Microsoft Visual Studio/2017";
      ls "/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools";
      ls "/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild";
      ls "/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0";
      ls "/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin";
      choco install cmake;
      choco install nodejs;
      wget -nv -O boost.zip https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.zip;
      7z x boost.zip -y -o/c/boost -r;
    fi
before_script:
  - if [[ "$BUILD_NODEJS_LIB" == "ON" ]]; then npm install; fi
  - mkdir build
  - cd build
  - echo $BUILD_CXX_LIB
  - echo $BUILD_NODEJS_LIB
  - echo $BUILD_PY_LIB
  - echo $USE_PYTHONV3
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cmake
        -DBOOST_ROOT="/c/boost/boost_1_69_0"
        -DBUILD_CXX_LIB="$BUILD_CXX_LIB"
        -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB"
        -DBUILD_PY_LIB="$BUILD_PY_LIB"
        -DUSE_PYTHONV3="$USE_PYTHONV3"
        -DVERSION_STRING="$TRAVIS_BRANCH"
        ../src;
    else
      /usr/local/bin/cmake
        -DBUILD_CXX_LIB="$BUILD_CXX_LIB"
        -DBUILD_NODEJS_LIB="$BUILD_NODEJS_LIB"
        -DBUILD_PY_LIB="$BUILD_PY_LIB"
        -DUSE_PYTHONV3="$USE_PYTHONV3"
        -DVERSION_STRING="$TRAVIS_BRANCH"
        ../src;
    fi
script:
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ls; "/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe" ALL_BUILD.vcxproj; else make; fi

after_success:
  - sudo make install
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then otool -L /usr/local/lib/python2.7/site-packages/ocl.so; fi
